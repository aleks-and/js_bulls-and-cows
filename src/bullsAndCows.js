'use strict';

/**
 * Implement bullsAndCows function:
 *
 * Function takes 2 strings: generatedNumber (generated by computer) and
 * enteredNumber (entered by player) and returns count of bulls and cows
 * according to rules (see readme.md). Each parameter should be exactly 4 digits
 * long.
 *
 * Function returns result as object with properties 'bulls' and 'cows' where
 * 'result.bulls' is a count of bulls and result.cows is a count of cows.
 *
 * If wrong parameter enteredNumber is given function returns undefined.
 *
 * bullsAndCows('1234', '1345') === [1, 2]
 * bullsAndCows('1234', '1234') === [4, 0]
 * bullsAndCows('1234', '') === undefined
 * bullsAndCows('1234', '12') === undefined
 * bullsAndCows('1234', 'asdf') === undefined
 * bullsAndCows('1234', '1234567890') === undefined
 *
 * @param {string} generatedNumber - generated by computer
 * @param {string} enteredNumber - entered by a player
 *
 * @return {object} - like {bulls: 0, cows: 0}
 */
function bullsAndCows(generatedNumber, enteredNumber) {
  if (generatedNumber === undefined
    || enteredNumber === undefined
    || generatedNumber === null
    || enteredNumber === null
    || generatedNumber.match(/^\d{4}$/) === null
    || enteredNumber.match(/^\d{4}$/) === null) {
    return;
  }

  let enteredNumberArray = enteredNumber.split('');
  const generatedNumberArray = generatedNumber.split('');
  let bulls = 0;
  let cows = 0;

  enteredNumberArray = enteredNumberArray.filter(
    (item, index, array) => {
      return index === array.indexOf(item) && index === array.lastIndexOf(item);
    }
  );

  if (enteredNumberArray.length !== 4) {
    return;
  }

  enteredNumberArray.forEach(
    (item, index) => {
      if (item === generatedNumberArray[index]) {
        bulls++;
      } else if (generatedNumberArray.includes(item)) {
        cows++;
      }
    }
  );

  return { bulls: bulls, cows: cows };
}

module.exports = bullsAndCows;
